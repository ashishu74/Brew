<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-12-13T11:46:47Z" name="Workflow UBREW" finished-at="2018-12-13T11:47:14Z" duration-ms="27354">
    <groups>
    </groups>
    <test started-at="2018-12-13T11:46:47Z" name="VerifyHomepageUI" finished-at="2018-12-13T11:47:12Z" duration-ms="25309">
      <class name="UITesting.HomePageUI">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:46:47Z" name="launchBrowser" finished-at="2018-12-13T11:47:11Z" duration-ms="24937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method signature="getCssValue_TextFontSize_haveyour()[pri:5, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:11Z" name="getCssValue_TextFontSize_haveyour" finished-at="2018-12-13T11:47:12Z" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue_TextFontSize_haveyour -->
        <test-method signature="getCssValue__TextFontFamily_haveyour()[pri:6, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue__TextFontFamily_haveyour" finished-at="2018-12-13T11:47:12Z" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue__TextFontFamily_haveyour -->
        <test-method signature="getCssValue_TextColor_haveyour()[pri:7, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue_TextColor_haveyour" finished-at="2018-12-13T11:47:12Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue_TextColor_haveyour -->
        <test-method signature="getCssValue_TextFontSize_findsupplier()[pri:8, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue_TextFontSize_findsupplier" finished-at="2018-12-13T11:47:12Z" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue_TextFontSize_findsupplier -->
        <test-method signature="getCssValue__TextFontFamily_findsupplier()[pri:9, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue__TextFontFamily_findsupplier" finished-at="2018-12-13T11:47:12Z" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue__TextFontFamily_findsupplier -->
        <test-method signature="getCssValue_TextColor_findsupplier()[pri:10, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue_TextColor_findsupplier" finished-at="2018-12-13T11:47:12Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue_TextColor_findsupplier -->
        <test-method signature="getCssValue_TextFontSize_contract()[pri:11, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue_TextFontSize_contract" finished-at="2018-12-13T11:47:12Z" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue_TextFontSize_contract -->
        <test-method signature="getCssValue__TextFontFamily_contract()[pri:12, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue__TextFontFamily_contract" finished-at="2018-12-13T11:47:12Z" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue__TextFontFamily_contract -->
        <test-method signature="getCssValue_TextColor_contract()[pri:13, instance:UITesting.HomePageUI@707194ba]" started-at="2018-12-13T11:47:12Z" name="getCssValue_TextColor_contract" finished-at="2018-12-13T11:47:12Z" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCssValue_TextColor_contract -->
      </class> <!-- UITesting.HomePageUI -->
    </test> <!-- VerifyHomepageUI -->
    <test started-at="2018-12-13T11:47:12Z" name="VerifyLoginScenarios" finished-at="2018-12-13T11:47:14Z" duration-ms="2023">
      <class name="com.TestCases.VerifyLoginScenarios">
        <test-method signature="loginScenarios()[pri:0, instance:com.TestCases.VerifyLoginScenarios@424e1977]" started-at="2018-12-13T11:47:12Z" name="loginScenarios" finished-at="2018-12-13T11:47:12Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: /usr/bin/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: /usr/bin/chromedriver
at com.google.common.base.Preconditions.checkState(Preconditions.java:588)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:335)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at utility.BrowserFactory.startBrowser(BrowserFactory.java:22)
at com.TestCases.VerifyLoginScenarios.loginScenarios(VerifyLoginScenarios.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.TestCases.VerifyLoginScenarios@424e1977]" started-at="2018-12-13T11:47:12Z" name="tearDown" finished-at="2018-12-13T11:47:14Z" duration-ms="2001" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.TestCases.VerifyLoginScenarios.tearDown(VerifyLoginScenarios.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.TestCases.VerifyLoginScenarios -->
    </test> <!-- VerifyLoginScenarios -->
  </suite> <!-- Workflow UBREW -->
</testng-results>
